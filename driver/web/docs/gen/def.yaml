openapi: 3.0.3
info:
  title: Rokwire LMS Building Block API
  description: LMS Building Block API Documentation
  version: 1.9.2
servers:
  - url: 'https://api.rokwire.illinois.edu/lms'
    description: Production server
  - url: 'https://api-test.rokwire.illinois.edu/lms'
    description: Test server
  - url: 'https://api-dev.rokwire.illinois.edu/lms'
    description: Development server
  - url: 'http://localhost/lms'
    description: Local server
tags:
  - name: Api
    description: Clients  APIs.
  - name: Admin
    description: Clients administration APIs.
paths:
  /api/courses:
    get:
      tags:
        - Api
      summary: Get courses
      description: |
        Get courses
      security:
        - bearerAuth: []
      parameters:
        - name: type
          in: query
          description: course type
          required: false
          style: form
          explode: false
          schema:
            type: string
            enum:
              - custom
              - provider
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Course'
                    - $ref: '#/components/schemas/CustomCourse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/courses/{id}':
    get:
      tags:
        - Api
      summary: Get course by ID
      description: |
        Gets course by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the course
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal error
  '/api/courses/{id}/assignment-groups':
    get:
      tags:
        - Api
      summary: Get assignment-groups by ID
      description: |
        Gets assignment-groups by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the course
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: include
          in: query
          description: 'include = assignments,submission'
          required: false
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AssignmentGroup'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal error
  '/api/courses/{id}/users':
    get:
      tags:
        - Api
      summary: Get user by ID
      description: |
        Get user by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the course
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: include
          in: query
          description: 'include = enrollments,scores'
          required: true
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/users/self:
    get:
      tags:
        - Api
      summary: Get current user
      description: |
        Get current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/users/courses:
    get:
      tags:
        - Api
      summary: Get custom user courses
      description: |
        Get custom user courses by search parameters
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: query
          description: course ID
          required: false
          style: form
          explode: false
          schema:
            type: string
        - name: name
          in: query
          description: course name
          required: false
          style: form
          explode: false
          schema:
            type: string
        - name: key
          in: query
          description: course key
          required: false
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - id
                    - app_id
                    - org_id
                    - user_id
                    - course
                  type: object
                  properties:
                    id:
                      type: string
                      readOnly: true
                    app_id:
                      type: string
                      readOnly: true
                    org_id:
                      type: string
                      readOnly: true
                    user_id:
                      type: string
                      readOnly: true
                    course:
                      $ref: '#/components/schemas/CustomCourse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/users/courses/{id}':
    post:
      tags:
        - Api
      summary: Create custom user course
      description: |
        Create custom user course
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: course ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - Api
      summary: Delete custom user course
      description: |
        Delete custom user course
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: User course ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/users/courses/{course-id}/unit/{unit-id}':
    put:
      tags:
        - Api
      summary: Update custom user course
      description: |
        Update custom user course
      security:
        - bearerAuth: []
      parameters:
        - name: course-id
          in: path
          description: User course ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: unit-id
          in: path
          description: Unit ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: creates one nudge
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /admin/nudges-config:
    get:
      tags:
        - Admin
      summary: Get nudges config
      description: |
        Get nudges
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NudgesConfig'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    put:
      tags:
        - Admin
      summary: Update the nudges config
      description: |
        Update the nudges config
      security:
        - bearerAuth: []
      requestBody:
        description: update the nudges config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NudgesConfig'
        required: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /admin/nudges:
    get:
      tags:
        - Admin
      summary: Get nudges
      description: |
        Get nudges
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Nudge'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    post:
      tags:
        - Admin
      summary: Create Nudge
      description: |
        Creates Nudge
      security:
        - bearerAuth: []
      requestBody:
        description: creates one nudge
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_admin_req_create_nudge'
        required: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/admin/nudges/{id}':
    put:
      tags:
        - Admin
      summary: Update nudge by ID
      description: |
        Updates nudge by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the nudge that needs to be updated
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: update one nudge
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_admin_req_update_nudge'
        required: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - Admin
      summary: Delete nudge
      description: |
        Delete nudge by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The nudge ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /admin/sent-nudges:
    get:
      tags:
        - Admin
      summary: Find sent nudges
      description: |
        Find sent nudges
      security:
        - bearerAuth: []
      parameters:
        - name: nudge-id
          in: query
          description: nudge_id
          style: form
          explode: false
          schema:
            type: string
        - name: user-id
          in: query
          description: user_id
          style: form
          explode: false
          schema:
            type: string
        - name: net-id
          in: query
          description: net_id
          style: form
          explode: false
          schema:
            type: string
        - name: mode
          in: query
          description: mode
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - id
                    - nudge_id
                    - user_id
                    - net_id
                    - criteria_hash
                    - mode
                  type: object
                  properties:
                    id:
                      readOnly: true
                      type: string
                    nudge_id:
                      type: string
                    user_id:
                      type: string
                    net_id:
                      type: string
                    criteria_hash:
                      type: integer
                    mode:
                      type: string
                      enum:
                        - normal
                        - test
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal error
    delete:
      tags:
        - Admin
      summary: Delete sent nudge
      description: |
        Delete sent nudge by ID
      security:
        - bearerAuth: []
      parameters:
        - name: ids
          in: query
          description: A comma-separated list of sent_nudge IDs
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /admin/test-sent-nudges:
    delete:
      tags:
        - Admin
      summary: Clear test sent nudges
      description: |
        Clear all test sent nudges
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /admin/nudges-processes:
    get:
      tags:
        - Admin
      summary: Get nudges process
      description: |
        Get nudges process
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          description: The maximum number  to return
          required: false
          style: form
          explode: false
          schema:
            type: integer
        - name: offset
          in: query
          description: The index of the first nudges process to return
          required: false
          style: form
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - id
                    - mode
                    - created_at
                    - completed_at
                    - status
                    - error
                  type: object
                  properties:
                    id:
                      readOnly: true
                      type: string
                    mode:
                      type: string
                    created_at:
                      type: string
                    completed_at:
                      type: string
                    status:
                      type: string
                    error:
                      type: string
                    blocks:
                      type: object
                      properties:
                        number:
                          type: integer
                        items:
                          type: object
                          properties:
                            net_id:
                              type: string
                            user_id:
                              type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        enrollments:
          $ref: '#/components/schemas/Enrollment'
    Enrollment:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        grade:
          $ref: '#/components/schemas/Grade'
    Grade:
      type: object
      properties:
        current_score:
          type: number
    Course:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        access_restricted_by_date:
          type: boolean
    Assignment:
      type: object
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        course_id:
          type: integer
        html_url:
          type: string
        position:
          type: integer
    AssignmentGroup:
      type: object
      properties:
        id:
          type: string
        assigments:
          $ref: '#/components/schemas/Assignment'
    Nudge:
      required:
        - id
        - name
        - body
        - params
      type: object
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        body:
          type: string
        params:
          type: object
          properties:
            account_ids:
              type: array
              items:
                type: integer
            course_ids:
              type: array
              items:
                type: integer
        active:
          type: boolean
        users_sources:
          type: array
          items:
            $ref: '#/components/schemas/UsersSources'
    NudgesConfig:
      required:
        - active
        - group_name
        - test_group_name
        - mode
      type: object
      properties:
        active:
          type: boolean
        group_name:
          type: string
        test_group_name:
          type: string
        mode:
          type: string
          enum:
            - normal
            - test
        process_time:
          type: integer
        block_size:
          type: integer
    UsersSources:
      type: object
      properties:
        type:
          nullable: true
          type: string
        params:
          nullable: true
          type: object
    CustomCourse:
      required:
        - id
        - app_id
        - org_id
        - key
        - name
        - modules
      type: object
      properties:
        id:
          type: string
          readOnly: true
        app_id:
          type: string
          readOnly: true
        org_id:
          type: string
          readOnly: true
        key:
          type: string
        name:
          type: string
        modules:
          type: array
          items:
            $ref: '#/components/schemas/Module'
    Module:
      required:
        - id
        - app_id
        - org_id
        - key
        - course_key
        - name
        - units
      type: object
      properties:
        id:
          type: string
          readOnly: true
        app_id:
          type: string
          readOnly: true
        org_id:
          type: string
          readOnly: true
        course_key:
          type: string
        key:
          type: string
        name:
          type: string
        units:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
    Unit:
      required:
        - id
        - app_id
        - org_id
        - key
        - course_key
        - module_key
        - name
        - content
        - schedule
      type: object
      properties:
        id:
          type: string
          readOnly: true
        app_id:
          type: string
          readOnly: true
        org_id:
          type: string
          readOnly: true
        course_key:
          type: string
        module_key:
          type: string
        key:
          type: string
        name:
          type: string
        content:
          type: array
          items:
            $ref: '#/components/schemas/Content'
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleItem'
    Content:
      required:
        - id
        - app_id
        - org_id
        - course_key
        - module_key
        - unit_key
        - key
        - type
        - name
        - reference
      type: object
      properties:
        id:
          type: string
          readOnly: true
        app_id:
          type: string
          readOnly: true
        org_id:
          type: string
          readOnly: true
        course_key:
          type: string
        module_key:
          type: string
        unit_key:
          type: string
        key:
          type: string
        type:
          type: string
          enum:
            - assignment
            - resource
            - reward
            - evaluation
        name:
          type: string
        details:
          type: string
        reference:
          $ref: '#/components/schemas/Reference'
        linked_content:
          type: array
          items:
            type: string
          nullable: true
    ScheduleItem:
      required:
        - name
        - content_keys
        - duration
      type: object
      properties:
        name:
          type: string
        content_keys:
          type: array
          items:
            type: string
        duration:
          type: integer
    Reference:
      required:
        - name
        - type
        - reference_key
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        reference_key:
          type: string
    _admin_req_create_nudge:
      required:
        - id
        - name
        - body
        - deep_link
        - params
        - active
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        body:
          type: string
        deep_link:
          type: string
        params:
          type: object
          nullable: false
        active:
          type: boolean
        users_sources:
          type: array
          items:
            $ref: '#/components/schemas/UsersSources'
    _admin_req_update_nudge:
      required:
        - name
        - body
        - deep_link
        - params
        - active
      type: object
      properties:
        name:
          type: string
        body:
          type: string
        deep_link:
          type: string
        params:
          type: object
          nullable: false
        active:
          type: boolean
        users_sources:
          type: array
          items:
            $ref: '#/components/schemas/UsersSources'
